
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author suihaojun
 */
public class MagicianAgentGUI extends javax.swing.JFrame
{
    // Creates connection to the database
    private final String DATABASE_URL = "jdbc:derby://localhost:1527/SHJ";
    private Connection connection;
    private Statement statement;

    /**
     * Creates new form MagicianAgentGUI
     */
    public MagicianAgentGUI()
    {
        initComponents();
        try
        {
            connection = DriverManager.getConnection(DATABASE_URL, "hzs5220", "951029");
            statement = connection.createStatement();
            Holiday.getAllHoliday(statement, bookingHolidayCombo);
            Holiday.getAllHoliday(statement, holidayHolidayCombo);
            Magician.getAllMagician(statement, magicianMagicianCombo);
            Magician.getAllMagician(statement, cancelMagicianCombo);
            Booking.getAllCustomer(statement, cancelCustomerCombo);
            if (cancelCustomerCombo.getSelectedItem() != null)
                Booking.getCustomerHoliday(connection, cancelCustomerCombo.getSelectedItem().toString(), cancelHolidayCombo);
            WaitingList.setWaitingListTable(statement, waitingListTable);
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bookingNameText = new javax.swing.JTextField();
        bookingHolidayCombo = new javax.swing.JComboBox();
        bookingSubmitButton = new javax.swing.JButton();
        bookingStatusLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        holidayHolidayCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        holidayTable = new javax.swing.JTable();
        holidayRefresh = new javax.swing.JButton();
        holidayAddButton = new javax.swing.JButton();
        holidayNameText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        magicianMagicianCombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        magicianTable = new javax.swing.JTable();
        magicianRefresh = new javax.swing.JButton();
        magicianNameText = new javax.swing.JTextField();
        magicianAddButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        waitingListTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cancelMagicianCombo = new javax.swing.JComboBox();
        cancelMagicianConfirmButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cancelCustomerCombo = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        cancelHolidayCombo = new javax.swing.JComboBox();
        cancelCustomerHolidayConfirmButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Magician Agent");
        setName("Magician Agent"); // NOI18N

        jLabel1.setText("Your Name:");

        jLabel2.setText("Your Holiday:");

        bookingNameText.setColumns(7);

        bookingSubmitButton.setText("Submit");
        bookingSubmitButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bookingSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(51, 290, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bookingHolidayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bookingNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(78, 78, 78))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookingStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(bookingSubmitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bookingHolidayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addComponent(bookingSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookingStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Booking", jPanel1);

        jLabel3.setText("Check Holiday:");

        holidayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Customer", "Magician", "Time"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(holidayTable);

        holidayRefresh.setText("Refresh");
        holidayRefresh.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                holidayRefreshActionPerformed(evt);
            }
        });

        holidayAddButton.setText("Add");
        holidayAddButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                holidayAddButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("New Holiday:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(holidayHolidayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(holidayNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(53, 53, 53)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(holidayAddButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(holidayRefresh, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holidayAddButton)
                    .addComponent(jLabel5)
                    .addComponent(holidayNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holidayRefresh)
                    .addComponent(jLabel3)
                    .addComponent(holidayHolidayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Holiday", jPanel2);

        jLabel4.setText("Check Magician:");

        magicianTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Holiday", "Customer", "Time"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(magicianTable);

        magicianRefresh.setText("Refresh");
        magicianRefresh.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                magicianRefreshActionPerformed(evt);
            }
        });

        magicianAddButton.setText("Add");
        magicianAddButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                magicianAddButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("New Magician:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(magicianNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(magicianMagicianCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(magicianAddButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(magicianRefresh, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(magicianAddButton)
                    .addComponent(jLabel6)
                    .addComponent(magicianNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(magicianRefresh)
                    .addComponent(jLabel4)
                    .addComponent(magicianMagicianCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Magician", jPanel3);

        waitingListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Customer", "Holiday", "Time"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(waitingListTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Waiting List", jPanel4);

        jLabel7.setText("Drop Magician:");

        cancelMagicianConfirmButton.setText("Confirm");
        cancelMagicianConfirmButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelMagicianConfirmButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Cancel Customer Holiday:");

        jLabel9.setText("Customer:");

        cancelCustomerCombo.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                cancelCustomerComboItemStateChanged(evt);
            }
        });

        jLabel10.setText("Holiday:");

        cancelCustomerHolidayConfirmButton.setText("Confirm");
        cancelCustomerHolidayConfirmButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelCustomerHolidayConfirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cancelHolidayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(cancelCustomerHolidayConfirmButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(cancelCustomerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                                        .addComponent(cancelMagicianCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(cancelMagicianConfirmButton)))
                        .addGap(50, 50, 50))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cancelMagicianCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelMagicianConfirmButton))
                .addGap(35, 35, 35)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelCustomerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cancelHolidayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelCustomerHolidayConfirmButton))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cancel", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void magicianRefreshActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_magicianRefreshActionPerformed
    {//GEN-HEADEREND:event_magicianRefreshActionPerformed
        // TODO add your handling code here:
        try
        {
            if (magicianMagicianCombo.getSelectedItem() != null)
                Magician.setMagicianTable(connection, magicianMagicianCombo.getSelectedItem().toString(), magicianTable);
            else
            {
                String[] tableColumnsName = {"Holiday", "Customer", "Time"};
                DefaultTableModel magicianTableModel = (DefaultTableModel) magicianTable.getModel();
                magicianTableModel.setRowCount(0);
                magicianTableModel.setColumnIdentifiers(tableColumnsName);
                magicianTable.setModel(magicianTableModel);
            }
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }//GEN-LAST:event_magicianRefreshActionPerformed

    private void holidayAddButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_holidayAddButtonActionPerformed
    {//GEN-HEADEREND:event_holidayAddButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            String holidayName = holidayNameText.getText();
            if (holidayName.length() != 0)
            {
                if (!Holiday.getHoliday(connection, holidayName).next())
                {
                    Holiday.addHoliday(connection, holidayNameText.getText());
                    Holiday.getAllHoliday(statement, bookingHolidayCombo);
                    Holiday.getAllHoliday(statement, holidayHolidayCombo);
                }
            }
            else
                JOptionPane.showMessageDialog(null, "Please Enter Valid Holiday Name!");
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }//GEN-LAST:event_holidayAddButtonActionPerformed

    private void holidayRefreshActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_holidayRefreshActionPerformed
    {//GEN-HEADEREND:event_holidayRefreshActionPerformed
        // TODO add your handling code here:
        try
        {
            Holiday.setHolidayTable(connection, holidayHolidayCombo.getSelectedItem().toString(), holidayTable);
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }//GEN-LAST:event_holidayRefreshActionPerformed

    private void bookingSubmitButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_bookingSubmitButtonActionPerformed
    {//GEN-HEADEREND:event_bookingSubmitButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            Timestamp currentTimestamp = new Timestamp(Calendar.getInstance().getTime().getTime());
            String CustomerName = bookingNameText.getText();
            if (CustomerName.length() != 0)
            {
                String HolidayName = bookingHolidayCombo.getSelectedItem().toString();
                ResultSet resultSet = Magician.getFreeMagician(connection, HolidayName);
                String MagicianName;
                if (!Booking.getCustomerBooking(connection, CustomerName, HolidayName).next())
                {
                    if (resultSet.next())
                    {
                        MagicianName = resultSet.getString("MagicianName");
                        Booking.addBooking(connection, CustomerName, HolidayName, MagicianName, currentTimestamp);
                        bookingStatusLabel.setText("You have successfully booked on " + HolidayName + " with " + MagicianName);
                    }
                    else
                    {
                        if (!WaitingList.getCustomerWaiting(connection, CustomerName, HolidayName).next())
                        {
                            WaitingList.addWaiting(connection, CustomerName, HolidayName, currentTimestamp);
                            bookingStatusLabel.setText("You have been put on the waiting list for " + HolidayName);
                            WaitingList.setWaitingListTable(statement, waitingListTable);
                        }
                        else
                            bookingStatusLabel.setText("You are in the waiting list for " + HolidayName);
                    }
                }
                else
                    bookingStatusLabel.setText("You have a booking on " + HolidayName);
            }
            else
            {
                bookingStatusLabel.setText("");
                JOptionPane.showMessageDialog(null,"Please Enter Valid Customer Name!");
            }
            Booking.getAllCustomer(statement, cancelCustomerCombo);
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }//GEN-LAST:event_bookingSubmitButtonActionPerformed

    private void cancelCustomerComboItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_cancelCustomerComboItemStateChanged
    {//GEN-HEADEREND:event_cancelCustomerComboItemStateChanged
        // TODO add your handling code here:
        try
        {
            if (cancelCustomerCombo.getSelectedItem() != null)
                Booking.getCustomerHoliday(connection, cancelCustomerCombo.getSelectedItem().toString(), cancelHolidayCombo);
            else
                cancelHolidayCombo.removeAllItems();
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }//GEN-LAST:event_cancelCustomerComboItemStateChanged

    private void cancelCustomerHolidayConfirmButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelCustomerHolidayConfirmButtonActionPerformed
    {//GEN-HEADEREND:event_cancelCustomerHolidayConfirmButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            if (cancelCustomerCombo.getSelectedItem() != null)
            {
                String holidayName = cancelHolidayCombo.getSelectedItem().toString();
                String customerName = cancelCustomerCombo.getSelectedItem().toString();
                Booking.deleteCustomerBooking(connection, customerName, holidayName);
                WaitingList.deleteCustomerWaiting(connection, customerName, holidayName);
                ResultSet resultSet = Magician.getFreeMagician(connection, holidayName);
                String magicianName;
                if (resultSet.next())
                {
                    magicianName = resultSet.getString("MagicianName");
                    resultSet = WaitingList.getFirstCustomer(connection, holidayName);
                    if (resultSet.next())
                    {
                        Timestamp time = resultSet.getTimestamp("Timestamp");
                        customerName = resultSet.getString("CustomerName");
                        Booking.addBooking(connection, customerName, holidayName, magicianName, time);
                        WaitingList.deleteCustomerWaiting(connection, customerName, holidayName);
                    }
                }
                WaitingList.setWaitingListTable(statement, waitingListTable);
                Booking.getAllCustomer(statement, cancelCustomerCombo);
                if (cancelCustomerCombo.getSelectedItem() != null)
                    Booking.getCustomerHoliday(connection, cancelCustomerCombo.getSelectedItem().toString(), cancelHolidayCombo);
            }
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }//GEN-LAST:event_cancelCustomerHolidayConfirmButtonActionPerformed

    private void cancelMagicianConfirmButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelMagicianConfirmButtonActionPerformed
    {//GEN-HEADEREND:event_cancelMagicianConfirmButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            if(cancelMagicianCombo.getSelectedItem() != null)
                Magician.deleteMagician(connection, cancelMagicianCombo.getSelectedItem().toString());
            WaitingList.setWaitingListTable(statement, waitingListTable);
            Magician.getAllMagician(statement, cancelMagicianCombo);
            Magician.getAllMagician(statement, magicianMagicianCombo);
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }//GEN-LAST:event_cancelMagicianConfirmButtonActionPerformed

    private void magicianAddButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_magicianAddButtonActionPerformed
    {//GEN-HEADEREND:event_magicianAddButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            String magicianName = magicianNameText.getText();
            if (magicianName.length() != 0)
            {
                if (!Magician.getMagician(connection, magicianName).next())
                {
                    Magician.addMagician(connection, statement, magicianName);
                    Magician.getAllMagician(statement, magicianMagicianCombo);
                    Magician.getAllMagician(statement, cancelMagicianCombo);
                    WaitingList.setWaitingListTable(statement, waitingListTable);
                }
            }
            else
                JOptionPane.showMessageDialog(null,"Please Enter Valid Magician Name!");
        }
        catch (SQLException sqlException)
        {
            sqlException.printStackTrace();
        }
    }//GEN-LAST:event_magicianAddButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /*
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MagicianAgentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MagicianAgentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MagicianAgentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MagicianAgentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                MagicianAgentGUI application = new MagicianAgentGUI();
                application.setVisible(true);
                application.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bookingHolidayCombo;
    private javax.swing.JTextField bookingNameText;
    private javax.swing.JLabel bookingStatusLabel;
    private javax.swing.JButton bookingSubmitButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cancelCustomerCombo;
    private javax.swing.JButton cancelCustomerHolidayConfirmButton;
    private javax.swing.JComboBox cancelHolidayCombo;
    private javax.swing.JComboBox cancelMagicianCombo;
    private javax.swing.JButton cancelMagicianConfirmButton;
    private javax.swing.JButton holidayAddButton;
    private javax.swing.JComboBox holidayHolidayCombo;
    private javax.swing.JTextField holidayNameText;
    private javax.swing.JButton holidayRefresh;
    private javax.swing.JTable holidayTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton magicianAddButton;
    private javax.swing.JComboBox magicianMagicianCombo;
    private javax.swing.JTextField magicianNameText;
    private javax.swing.JButton magicianRefresh;
    private javax.swing.JTable magicianTable;
    private javax.swing.JTable waitingListTable;
    // End of variables declaration//GEN-END:variables
}
